"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
exports.__esModule = true;
var components_1 = require("./components");
__createBinding(exports, components_1, "Transform2D");
__createBinding(exports, components_1, "Camera2D");
__createBinding(exports, components_1, "Camera2DManager");
__createBinding(exports, components_1, "Transform2DManager");
__createBinding(exports, components_1, "Camera2DControl");
__createBinding(exports, components_1, "Camera2DControlManager");
__createBinding(exports, components_1, "Camera3D");
__createBinding(exports, components_1, "Camera3DManager");
__createBinding(exports, components_1, "Transform3D");
__createBinding(exports, components_1, "Transform3DManager");
__createBinding(exports, components_1, "Sprite");
__createBinding(exports, components_1, "SpriteManager");
__createBinding(exports, components_1, "SpriteClip");
__createBinding(exports, components_1, "SpriteSheet");
__createBinding(exports, components_1, "UIElement");
__createBinding(exports, components_1, "UIElementManager");
__createBinding(exports, components_1, "UIText");
__createBinding(exports, components_1, "RunOnUpdateComponent");
__createBinding(exports, components_1, "TransformComponent");
__createBinding(exports, components_1, "RenderableComponent");
var plugins_1 = require("./plugins");
__createBinding(exports, plugins_1, "Asset");
__createBinding(exports, plugins_1, "Assets");
__createBinding(exports, plugins_1, "JSONAsset");
__createBinding(exports, plugins_1, "ImageAsset");
__createBinding(exports, plugins_1, "Time");
__createBinding(exports, plugins_1, "Renderer");
__createBinding(exports, plugins_1, "RendererHandler");
__createBinding(exports, plugins_1, "CtxRendererHandler");
__createBinding(exports, plugins_1, "CtxRenderer");
__createBinding(exports, plugins_1, "CtxTransform2DRendererHandler");
__createBinding(exports, plugins_1, "CtxSpriteRendererHandler");
__createBinding(exports, plugins_1, "CtxUIRendererHandler");
__createBinding(exports, plugins_1, "Input");
__createBinding(exports, plugins_1, "InputHandler");
__createBinding(exports, plugins_1, "KeyboardInputHandler");
__createBinding(exports, plugins_1, "MouseInputHandler");
__createBinding(exports, plugins_1, "FullScreenCanvas");
__createBinding(exports, plugins_1, "InputButton");
var sceneGraph_1 = require("./sceneGraph");
__createBinding(exports, sceneGraph_1, "Component");
__createBinding(exports, sceneGraph_1, "Manager");
__createBinding(exports, sceneGraph_1, "DefaultManager");
__createBinding(exports, sceneGraph_1, "Entity");
__createBinding(exports, sceneGraph_1, "Scene");
__createBinding(exports, sceneGraph_1, "Plugin");
var utils_1 = require("./utils");
__createBinding(exports, utils_1, "getTextHeight");
__createBinding(exports, utils_1, "getTextUnitHeight");
__createBinding(exports, utils_1, "getTextUnitWidth");
__createBinding(exports, utils_1, "getTextWidth");
__createBinding(exports, utils_1, "BASE_SIZE");
__createBinding(exports, utils_1, "INV_BASE_SIZE");
__createBinding(exports, utils_1, "getGlobalCanvas");
__createBinding(exports, utils_1, "getGlobalContext");
__createBinding(exports, utils_1, "Canvas");
__createBinding(exports, utils_1, "Loop");
__createBinding(exports, utils_1, "filterRequirements");
var math_1 = require("./math");
__createBinding(exports, math_1, "composeMat2d");
__createBinding(exports, math_1, "decomposeMat2d");
__createBinding(exports, math_1, "degToRad");
__createBinding(exports, math_1, "radToDeg");
__createBinding(exports, math_1, "DEG_TO_RAD");
__createBinding(exports, math_1, "RAD_TO_DEG");
__createBinding(exports, math_1, "EPSILON");
__createBinding(exports, math_1, "TAU");
__createBinding(exports, math_1, "HALF_PI");
__createBinding(exports, math_1, "toHex");
__createBinding(exports, math_1, "toRgb");
__createBinding(exports, math_1, "toRgba");
__createBinding(exports, math_1, "clamp");
__createBinding(exports, math_1, "angleVec2");
__createBinding(exports, math_1, "vec2FromAngle");
__createBinding(exports, math_1, "getRotationFromMat2d");
__createBinding(exports, math_1, "getAngleBetweenPoints");
__createBinding(exports, math_1, "getAngleFromPoint");
__createBinding(exports, math_1, "getPointFromAngle");
__createBinding(exports, math_1, "getTangentAngle");
__createBinding(exports, math_1, "sign");
__createBinding(exports, math_1, "projectPointOnAxis");
__createBinding(exports, math_1, "equals");
